[[START OF 'TASK_RESUMPTION_ADDON' v0.1: Instructions for AI Task Management]]

**Purpose:** This add-on instructs the AI (Jules) to generate a detailed "Resumption Prompt" for the current task it is working on. This allows the current task to be paused and resumed efficiently by another AI instance (or the same AI at a later time) with minimal context loss.

**Instructions for AI (Jules):**

1.  **Identify Core Task Details:**
    *   Review your original prompt for this task. Identify and summarize:
        *   The overall goal of this task.
        *   The specific deliverables requested.
    *   Review your `_dev_plan.md` for this task. Note the last completed step and the next planned step(s).

2.  **Summarize Work Completed:**
    *   Consult your commit history for this task (as per the Base IEP).
    *   List the key actions you have taken and the files you have created or modified. Reference specific commit IDs where appropriate.

3.  **Specify Output Location for Resumption Prompt:**
    *   The Resumption Prompt should be saved in a file named `_resumption_prompt.txt` within the primary output directory designated for this task by the user (hereafter referred to as "Task Output Directory").
    *   If the user did not specify a Task Output Directory, save it in the current working directory of the task.

4.  **Generate the Resumption Prompt Content:**
    Create the content for `_resumption_prompt.txt` with the following structure:

    ```text
    # Resumption Prompt for Task: [Original Task Name/Objective from Prompt]

    ## Original Task Goal:
    [Summary of the overall goal from original prompt]

    ## Original Task Deliverables:
    [List of specific deliverables from original prompt]

    ## Current Task State (as of [Timestamp]):

    ### Last Completed Step (from _dev_plan.md):
    [Quote the last completed step]

    ### Next Planned Step(s) (from _dev_plan.md):
    [Quote the next planned step or steps]

    ### Summary of Work Done So Far:
    [Bulleted list of key actions and files created/modified, with commit references if available. e.g.,
    - Created initial project structure (Commit: XXXXXX)
    - Implemented function Y in file Z.py (Commit: YYYYYY)
    - Encountered issue: [brief description of issue if any is blocking next step]
    ]

    ## Files Created/Modified in this Session (relative to project root):
    [List of file paths created or modified during your work session for this task]

    ## Next Steps for Resuming AI:
    1.  Review the above context thoroughly.
    2.  Focus on completing: "[Next Planned Step(s) from _dev_plan.md]"
    3.  Ensure all original task deliverables are met.
    4.  Continue to update `_dev_plan.md` and follow the Base IEP for commits.
    5.  If any blocking issues were noted, address them first.

    ## Original Full Prompt (for reference):
    [[[
    [Paste the full original prompt content here. Ensure it's clearly demarcated, perhaps by triple square brackets or similar, to avoid confusion with this resumption prompt's own instructions.]
    ]]]
    ```

5.  **Save the Resumption Prompt:**
    *   Write the content generated in Step 4 to the `_resumption_prompt.txt` file at the location determined in Step 3.

6.  **Update Commit Message (Base IEP Extension):**
    *   When you commit the creation or update of this `_resumption_prompt.txt`, you **must** extend your commit message as per the Base IEP.
    *   In the `Notes-To-Next-Jules:` field of your commit message, add the following structured tag:
        `[TASK_RESUMPTION_PROMPT_STATUS]: Updated_At='[Full path to _resumption_prompt.txt]'`
    *   Example `Notes-To-Next-Jules:` field:
        `Notes-To-Next-Jules: Standard notes here. [TASK_RESUMPTION_PROMPT_STATUS]: Updated_At='alpha_project/outputs/_resumption_prompt.txt'`

7.  **Final Action:**
    *   After saving the `_resumption_prompt.txt` and committing it with the updated message, if your instructions were to "stop and create a resumption prompt", then cease further work on other aspects of the original task.

These instructions are critical for enabling efficient, stateful task handoff. Adhere to them precisely.

[[END OF 'TASK_RESUMPTION_ADDON' v0.1]]
