# === MPS TEMPLATE INSTRUCTIONS FOR USER ===
#
# This file (`Master_Prompt_Segment.txt`) is a template. To use the MPS framework:
#
# 1. **COPY TO YOUR PROJECT:**
#    Copy the entire content of this file into a new file within your own project's
#    `prompts` directory (e.g., `my_project_repo/prompts/my_project_main_mps.txt`).
#
# 2. **ADD YOUR PROJECT REQUEST (IN YOUR COPY):**
#    At the VERY BEGINNING of your new file (e.g., `my_project_main_mps.txt`),
#    add your high-level project request. It is **highly recommended** to wrap
#    your request in `[[USER_PROJECT_REQUEST]]` and `[[END_USER_PROJECT_REQUEST]]` tags.
#    For example:
#
#    [[USER_PROJECT_REQUEST]]
#    My project is to design and plan for a new automated hydroponics system
#    for urban farming, focusing on modularity and water efficiency.
#    [[END_USER_PROJECT_REQUEST]]
#
#    (The rest of this template's content, starting with `[[USER_APP_SELECTION]]`
#    or other initial blocks, should follow immediately after your project request.)
#
# 3. **CONFIGURE YOUR MPS FILE (IN YOUR COPY):**
#    Edit the user configuration blocks within your new file as needed:
#    *   `[[USER_APP_SELECTION]]`: Select a promptApp if you are using one.
#    *   `[[USER_ADDON_SELECTION]]`: Select standalone add-ons if not using a promptApp.
#    *   `[[USER_FRAMEWORK_SETTINGS]]`: Configure framework-level settings (see new block below).
#    *   `[[USER_promptAPP_NAME_CONFIGURATION]]`: If you selected a promptApp, define
#       which of its tasks to run. (See examples in this template).
#    *   `[[USER_CONFIG_FOR_componentName]]`: Provide specific configurations for
#       any components that require them.
#
# 4. **INVOKE THE MPS FRAMEWORK (YOUR ACTUAL PROMPT TO THE AI SYSTEM):**
#    Your actual prompt to the AI planning system will then be a single directive
#    pointing to YOUR prepared file. For example:
#
#    `[[PROCESS_FRAMEWORK_INSTRUCTIONS FROM /prompts/my_project_main_mps.txt]]`
#
#    The AI system will load your file, find your project request within the
#    `[[USER_PROJECT_REQUEST]]` tags, and then process your MPS configurations.
#
# === END OF MPS TEMPLATE INSTRUCTIONS ===

[[USER_APP_SELECTION]]
# Instructions for user:
# - List desired "promptApp" names below, one per line.
# - **Select at most ONE promptApp.** Mark selection with '[x]' (case-insensitive for 'x').
# - promptApp "apps" must exist as subdirectories in `prompts/apps/` in the target repository.
# - Each promptApp folder must contain a manifest file: `[appName]/[appName]_manifest.json`.
# - If a promptApp is selected, it will be the primary workflow. You will also need to provide a
#   corresponding `[[USER_promptAPP_NAME_CONFIGURATION]]` block (see example section below)
#   to specify which tasks within the promptApp to execute.
# - If no promptApp is selected, you can select one or more add-ons from `[[USER_ADDON_SELECTION]]`
#   to define the AI's task.

# [ ] CompliancePLM_App # Example: Select this to run the Compliance PLM workflow
[[END_USER_APP_SELECTION]]

[[USER_ADDON_SELECTION]]
# Instructions for user:
# - If no promptApp is selected in `[[USER_APP_SELECTION]]`, you can select one or more add-on "apps" here
#   to define the AI's operation.
# - If a promptApp *is* selected, the tasks within that promptApp will define which components (including add-ons)
#   are run. Add-ons selected here might be ignored if a promptApp is active, or they might provide
#   supplementary, inheritable instructions if the promptApp's design allows for it (consult promptApp documentation).
#   Generally, a selected promptApp takes precedence.
#
# - List desired add-on "app names" (folder names) below, one per line.
# - Mark selection with '[x]' (case-insensitive for 'x').
# - Add-on apps must exist as subdirectories in `prompts/add_ons/` in the target repository.
# - Each add-on app folder must contain a primary instruction file: `[app_name]/[app_name].txt`.
#
# - If a primary add-on like 'task_spawning_addon' is selected (and no promptApp is active), other selected add-on apps
#   listed *before* it will typically have their primary instruction file content appended to the
#   generated task prompts, preserving their listed order.
#
# - App-specific configurations: Some add-on apps (and components used by promptApps) may use parameters
#   defined in a `[[USER_CONFIG_FOR_appName]]...[[END_USER_CONFIG_FOR_appName]]` block, which you would
#   place in your main spawn prompt. Refer to the component's documentation or its
#   `USER_appName_CONFIG.txt` template file for details.

[x] task_resumption_addon               # Example: Provides task state resumption capabilities for Task AIs.
# [ ] create_research_report          # Example: Select to generate a research report.
# [ ] task_spawning_addon             # CRITICAL (if no promptApp selected): Enables project planning & task generation.
                               # If selected as primary, list last.
[[END_USER_ADDON_SELECTION]]

[[USER_FRAMEWORK_SETTINGS]]
# --- Handoff Notes Granularity ---
# Controls the level of detail Jules will record in the HANDOFF_NOTES.md file at the end of its session.
# If checked, Jules will record detailed session notes, similar to traditional verbose logging.
# If unchecked (default), Jules will only record a concise summary focusing on major architectural changes, key decisions, and the state of deliverables.
[ ] Full_Handoff_Notes_Logging_Enabled
[[END_USER_FRAMEWORK_SETTINGS]]

[[USER_promptAPP_NAME_CONFIGURATION_EXAMPLES_SECTION]]
# Instructions for user:
# - If you select a promptApp in `[[USER_APP_SELECTION]]` (e.g., `CompliancePLM_App`), you MUST provide a
#   corresponding configuration block in your main spawn prompt, formatted as:
#   `[[USER_CompliancePLM_App_CONFIGURATION]] ... [[END_USER_CompliancePLM_App_CONFIGURATION]]`.
# - This block allows you to specify which phases and tasks defined in the promptApp's manifest
#   you want to execute.
# - The Planning AI will use this block to determine the workflow.
# - For each task you select to run, you may also need to provide standard app-specific configuration
#   blocks (e.g., `[[USER_CONFIG_FOR_componentName]]`) if the underlying component used by that
#   task requires parameters beyond its defaults or any overrides set in the promptApp manifest.

# Example for `[[USER_CompliancePLM_App_CONFIGURATION]]` block:
# [[USER_CompliancePLM_App_CONFIGURATION]]
# # Instructions:
# # 1. Review the phases and tasks below, which correspond to the CompliancePLM app's manifest.
# # 2. Mark the tasks you want to execute for the current session with '[x]'.
# # 3. For tasks that use configurable components (like 'create_research_report' or 'task_spawning_addon'),
# #    ensure you also provide the necessary `[[USER_CONFIG_FOR_componentName]]` blocks
# #    in your main prompt if the defaults (from the component's USER_config.txt or
# #    the promptApp manifest's defaultConfigOverrides) are not sufficient for your needs.
# #    Consult the component's `USER_..._CONFIG.txt` file or the MPS_Usage_Guide.md for parameter details.
#
# # --- Concept Phase ---
# [ ] Research
# [ ] Architectural Specification
# [ ] Product Specification
# [ ] Product Requirements
#
# # --- Plan Phase ---
# [ ] Development Planning
# [ ] Change Management Planning
# [ ] Document Management Planning
# [ ] Requirements Management Planning
# [ ] Safety Planning
# [ ] CyberSecurity Planning
#
# # --- Development Phase ---
# [ ] Design
# [ ] Develop
# [ ] Test
# [ ] Review
#
# # --- Release Phase ---
# # (No specific tasks defined in manifest yet - selecting this phase currently has no direct action
# # unless future framework versions allow phase-level directives without specific tasks)
# # [ ] *Placeholder for future Release Task 1*
#
# # --- Retire Phase ---
# # (No specific tasks defined in manifest yet - selecting this phase currently has no direct action)
# # [ ] *Placeholder for future Retire Task 1*
# [[END_USER_CompliancePLM_App_CONFIGURATION]]

[[END_USER_promptAPP_NAME_CONFIGURATION_EXAMPLES_SECTION]]

--------------------------------------------------------------------------------------------------------------
[[START OF MASTER PROMPT SEGMENT (v0.5.0 - PromptApp Support)]]

# Overall AI Operation:
# You are a Planning AI. Your primary function is to interpret a user's project request (provided by the user *before* this Master Prompt Segment begins)
# and then to follow the instructions within this segment. This may involve executing a selected "promptApp"
# (a predefined multi-stage workflow) or executing selected "add-on apps".
# This MPS now uses a "folder-per-app" architecture for components (promptApps, add-ons, utils) with fixed base paths
# (e.g., `prompts/apps/`, `prompts/add_ons/`, `prompts/util/`).
# App-specific configurations can be provided by the user in their main spawn prompt within `[[USER_CONFIG_FOR_appName]]...[[END_USER_CONFIG_FOR_appName]]` blocks,
# and promptApp task selections are made in `[[USER_promptAppName_CONFIGURATION]]` blocks.
# Core operational instructions, including component discovery and loading, are defined in an included file.

[[INCLUDE Core_Planning_Instructions.txt FROM /prompts/iep/Core_Planning_Instructions.txt]]

# Note: The `Core_Planning_Instructions.txt` will guide you on parsing `[[USER_APP_SELECTION]]`,
# `[[USER_ADDON_SELECTION]]`, `[[USER_FRAMEWORK_SETTINGS]]`, discovering app-specific config blocks and promptApp task configuration
# blocks from the main prompt, loading components, and executing the selected promptApp or add-ons.

[[END OF MASTER PROMPT SEGMENT (v0.5.0 - PromptApp Support)]]
